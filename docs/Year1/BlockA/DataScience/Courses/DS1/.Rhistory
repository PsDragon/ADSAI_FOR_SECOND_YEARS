# SocialS Skills - Sociale vaardigheden
# Recode inverted items
df$X23 <- recode(df$X23, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X24 <- recode(df$X24, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X25 <- recode(df$X25, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X26 <- recode(df$X26, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
soci <- data.frame(as.numeric(df$X23), as.numeric(df$X24), as.numeric(df$X25), as.numeric(df$X26))
psych::alpha(soci, na.rm = TRUE, check.keys = TRUE)
soci_Internal_Consistency <- psych::alpha(soci, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$soci <- soci_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$soci <- (df$X23 + df$X24 + df$X25 + df$X26)/4
summary(df$soci)
rm(soci, soci_Internal_Consistency)
# Energie
# Recode inverted items
df$X27 <- recode(df$X27, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X28 <- recode(df$X28, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X29 <- recode(df$X29, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X30 <- recode(df$X30, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
enr <- data.frame(as.numeric(df$X27), as.numeric(df$X28), as.numeric(df$X29), as.numeric(df$X30))
psych::alpha(enr, na.rm = TRUE, check.keys = TRUE)
enr_Internal_Consistency <- psych::alpha(enr, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$enr <- enr_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$enr <- (df$X27 + df$X28 + df$X29 + df$X30)/4
summary(df$enr)
rm(enr, enr_Internal_Consistency)
# Stress
# Recode inverted items
df$X31 <- recode(df$X31, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X32 <- recode(df$X32, 'Zeer mee eens' = 1, 'Mee eens' = 2, 'Neutraal' = 3, 'Mee oneens' = 4, 'Zeer mee oneens' = 5)
df$X33 <- recode(df$X33, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X34 <- recode(df$X34, 'Zeer mee eens' = 1, 'Mee eens' = 2, 'Neutraal' = 3, 'Mee oneens' = 4, 'Zeer mee oneens' = 5)
# Calculate internal consistency
#strs <- data.frame(as.numeric(df$X31), as.numeric(df$X32), as.numeric(df$X33), as.numeric(df$X34))
"X32 was dropped as this item brought the relieability to unacceptable levels"
strs <- data.frame(as.numeric(df$X31), as.numeric(df$X33), as.numeric(df$X34))
psych::alpha(strs, na.rm = TRUE, check.keys = TRUE)
strs_Internal_Consistency <- psych::alpha(strs, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$strs <- strs_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$strs <- (df$X31 + df$X32 + df$X33 + df$X34)/4
summary(df$strs)
rm(strs, strs_Internal_Consistency)
df[1:34] <- NULL
### ----------------------------------------------------------------------------
### Analysis
### ----------------------------------------------------------------------------
hist(df)
densityplot(df$lrb, df)
test <- lm(lrb ~ wrk + lrb + luv + idee + crea + soci + enr + strs, data = df)
summary(test)
densityplot(df$lrb, df)
sociskl <- lm(soci ~ luv + strs, data = df)
summary(sociskl)
densityplot(df$crea)
oploscrea <- lm(crea ~ lrb + luv + idee, data = df)
summary(oploscrea)
densityplot(df$luv)
leiduitl <- lm(luv ~ wrk + idee + crea + soci, data = df)
summary(leiduitl)
leerbegrijp <- lm(lrb ~ idee + crea + enr, data = df)
summary(leerbegrijp)
plot(df$lrb ~ idee + crea + enr)
werkdruk <- lm(wrk ~ luv + idee + strs, data = df)
summary(werkdruk)
stress <- lm(strs ~ wrk + soci, data = df)
summary(stress)
plot(stress)
plot(strs ~ wrk + soci)
lmplot(strs ~ wrk + soci)
library(swirlify)
new_lesson("Seeing the world in data", "DS1")
set_lesson("Seeing the world in data")
set_lesson()
lesson
swirl::install_course()
?swirl_courses_dir
?swirl
swirl::info()
main()
nxt()
bye()
swirl()
# DS lecturer interview competentcy fun
#-----------------------------------------------------------------------------##
##--Load packages-------------------------------------------------------------##
# Check if package is installed, if not install it and then load it into the
# library. Note that some packages are not used anymore and will be removed later
require("psych") # Social sciences stats packages
require("effsize") # For calculating effect sizes
require("lsr") # Basic stats packages for data manipulation and tests
require("xtable") # Exporting tables and dataframes
require("ggplot2") # Generate Graphs
require("tidyr") # # Data cleaning, formatting and EDA
require("dplyr") # Data cleaning, formatting and EDA
require("EnvStats") # Test goodness of fit easily
require("lmtest") # Linear Regression tests
require("olsrr") # Easily testing linear regression assumptions
require(lavaan) # Doing confirmatory factor analysis
require(semPlot) # Structural equation modeling
require(OpenMx)
require(tidyverse)
require(knitr) # Table creation
require(kableExtra) # Table Creation
require(GGally)
require(XML)
require(mice) # missing data
require(MASS)
require(MKinfer)
require(data.table) # Table creation
require(MVN)
#-----------------------------------------------------------------------------##
##--Load data etc-------------------------------------------------------------##
# Import CSV
df <- read_csv("~/Temp/Bram Competentie Evaluatie GGD ZHZ.csv",
col_names = FALSE, skip = 1)
#-----------------------------------------------------------------------------##
##--Exploratory Data Analysis ------------------------------------------------##
describe(df)
summary(df)
colnames(df)
##--Data Cleaning ------------------------------------------------------------##
# Remove redundant info
df$X1 <- NULL
# Create holder for internal consistency calculation
Internal_Consistency_Table <- data.table()
# Omgaan met werkdruk
# Recode inverted items
df$X2 <- recode(df$X2, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X3 <- recode(df$X3, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X4 <- recode(df$X4, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X5 <- recode(df$X5, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
"The X2 construct was dropped because it caused the reliability to drop to unacceptable levels"
#IN <- data.frame(as.numeric(df$X2), as.numeric(df$X3), as.numeric(df$X4), as.numeric(df$X5))
wrk <- data.frame(as.numeric(df$X3), as.numeric(df$X4), as.numeric(df$X5))
psych::alpha(wrk, na.rm = TRUE, check.keys = TRUE)
wrk_Internal_Consistency <- psych::alpha(wrk, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$wrk <- wrk_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$wrk <- (df$X2 + df$X3 + df$X4 + df$X5)/4
summary(df$wrk)
rm(wrk, wrk_Internal_Consistency)
# Leren en Begrijpen
# Recode inverted items
df$X6 <- recode(df$X6, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X7 <- recode(df$X7, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# X8 is also reversed
df$X8 <- recode(df$X8, 'Zeer mee eens' = 1, 'Mee eens' = 2, 'Neutraal' = 3, 'Mee oneens' = 4, 'Zeer mee oneens' = 5)
df$X9 <- recode(df$X9, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
lrb <- data.frame(as.numeric(df$X6), as.numeric(df$X7), as.numeric(df$X8), as.numeric(df$X9))
psych::alpha(lrb, na.rm = TRUE, check.keys = TRUE)
lrb_Internal_Consistency <- psych::alpha(lrb, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$lrb <- lrb_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$lrb <- (df$X6 + df$X7 + df$X8 + df$X9)/4
summary(df$lrb)
rm(lrb, lrb_Internal_Consistency)
# Leiding/Uitlegvaardigheden
# Recode inverted items
df$X10 <- recode(df$X10, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X11 <- recode(df$X11, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X12 <- recode(df$X12, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X13 <- recode(df$X13, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X14 <- recode(df$X14, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
luv <- data.frame(as.numeric(df$X10), as.numeric(df$X11), as.numeric(df$X12), as.numeric(df$X13), as.numeric(df$X14))
psych::alpha(luv, na.rm = TRUE, check.keys = TRUE)
luv_Internal_Consistency <- psych::alpha(luv, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$luv <- luv_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$luv <- (df$X10 + df$X11 + df$X12 + df$X13 + df$X14)/5
summary(df$luv)
rm(luv, luv_Internal_Consistency)
# Openheid voor IdeeÃ«n
# Recode inverted items
df$X15 <- recode(df$X15, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X16 <- recode(df$X16, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X17 <- recode(df$X17, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X18 <- recode(df$X18, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
idee <- data.frame(as.numeric(df$X15), as.numeric(df$X16), as.numeric(df$X17), as.numeric(df$X18))
psych::alpha(idee, na.rm = TRUE, check.keys = TRUE)
idee_Internal_Consistency <- psych::alpha(idee, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$idee <- idee_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$idee <- (df$X15 + df$X16 + df$X17 + df$X18)/4
summary(df$idee)
rm(idee, idee_Internal_Consistency)
# Creativiteit & oplossingsvaardigheid
# Recode inverted items
df$X19 <- recode(df$X19, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X20 <- recode(df$X20, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X21 <- recode(df$X21, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X22 <- recode(df$X22, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
crea <- data.frame(as.numeric(df$X19), as.numeric(df$X20), as.numeric(df$X21), as.numeric(df$X22))
psych::alpha(crea, na.rm = TRUE, check.keys = TRUE)
crea_Internal_Consistency <- psych::alpha(crea, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$crea <- crea_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$crea <- (df$X19 + df$X20 + df$X21 + df$X22)/4
summary(df$crea)
rm(crea, crea_Internal_Consistency)
# SocialS Skills - Sociale vaardigheden
# Recode inverted items
df$X23 <- recode(df$X23, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X24 <- recode(df$X24, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X25 <- recode(df$X25, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X26 <- recode(df$X26, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
soci <- data.frame(as.numeric(df$X23), as.numeric(df$X24), as.numeric(df$X25), as.numeric(df$X26))
psych::alpha(soci, na.rm = TRUE, check.keys = TRUE)
soci_Internal_Consistency <- psych::alpha(soci, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$soci <- soci_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$soci <- (df$X23 + df$X24 + df$X25 + df$X26)/4
summary(df$soci)
rm(soci, soci_Internal_Consistency)
# Energie
# Recode inverted items
df$X27 <- recode(df$X27, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X28 <- recode(df$X28, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X29 <- recode(df$X29, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X30 <- recode(df$X30, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
enr <- data.frame(as.numeric(df$X27), as.numeric(df$X28), as.numeric(df$X29), as.numeric(df$X30))
psych::alpha(enr, na.rm = TRUE, check.keys = TRUE)
enr_Internal_Consistency <- psych::alpha(enr, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$enr <- enr_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$enr <- (df$X27 + df$X28 + df$X29 + df$X30)/4
summary(df$enr)
rm(enr, enr_Internal_Consistency)
# Stress
# Recode inverted items
df$X31 <- recode(df$X31, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X32 <- recode(df$X32, 'Zeer mee eens' = 1, 'Mee eens' = 2, 'Neutraal' = 3, 'Mee oneens' = 4, 'Zeer mee oneens' = 5)
df$X33 <- recode(df$X33, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X34 <- recode(df$X34, 'Zeer mee eens' = 1, 'Mee eens' = 2, 'Neutraal' = 3, 'Mee oneens' = 4, 'Zeer mee oneens' = 5)
# Calculate internal consistency
#strs <- data.frame(as.numeric(df$X31), as.numeric(df$X32), as.numeric(df$X33), as.numeric(df$X34))
"X32 was dropped as this item brought the relieability to unacceptable levels"
strs <- data.frame(as.numeric(df$X31), as.numeric(df$X33), as.numeric(df$X34))
psych::alpha(strs, na.rm = TRUE, check.keys = TRUE)
strs_Internal_Consistency <- psych::alpha(strs, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$strs <- strs_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$strs <- (df$X31 + df$X32 + df$X33 + df$X34)/4
summary(df$strs)
rm(strs, strs_Internal_Consistency)
df[1:34] <- NULL
### ----------------------------------------------------------------------------
### Analysis
### ----------------------------------------------------------------------------
hist(df)
densityplot(df$lrb, df)
test <- lm(lrb ~ wrk + lrb + luv + idee + crea + soci + enr + strs, data = df)
summary(test)
densityplot(df$lrb, df)
sociskl <- lm(soci ~ luv + strs, data = df)
summary(sociskl)
densityplot(df$crea)
oploscrea <- lm(crea ~ lrb + luv + idee, data = df)
summary(oploscrea)
densityplot(df$luv)
leiduitl <- lm(luv ~ wrk + idee + crea + soci, data = df)
summary(leiduitl)
leerbegrijp <- lm(lrb ~ idee + crea + enr, data = df)
summary(leerbegrijp)
plot(df$lrb ~ idee + crea + enr)
werkdruk <- lm(wrk ~ luv + idee + strs, data = df)
summary(werkdruk)
stress <- lm(strs ~ wrk + soci, data = df)
summary(stress)
hist(df$crea)
library(ggplot2)
ggplot(df) + geom_histogram(df$crea)
ggplot(df, aes(geom_histogram(df$crea) )
ggplot(df, aes(geom_histogram(df$crea) )
)
ggplot(df, aes(geom_histogram(df$crea) )
)
ggplot(df, aes(df$crea)) + geom_histogram()
# DS lecturer interview competentcy fun
#-----------------------------------------------------------------------------##
##--Load packages-------------------------------------------------------------##
# Check if package is installed, if not install it and then load it into the
# library. Note that some packages are not used anymore and will be removed later
require("psych") # Social sciences stats packages
require("effsize") # For calculating effect sizes
require("lsr") # Basic stats packages for data manipulation and tests
require("xtable") # Exporting tables and dataframes
require("ggplot2") # Generate Graphs
require("tidyr") # # Data cleaning, formatting and EDA
require("dplyr") # Data cleaning, formatting and EDA
require("EnvStats") # Test goodness of fit easily
require("lmtest") # Linear Regression tests
require("olsrr") # Easily testing linear regression assumptions
require(lavaan) # Doing confirmatory factor analysis
require(semPlot) # Structural equation modeling
require(OpenMx)
require(tidyverse)
require(knitr) # Table creation
require(kableExtra) # Table Creation
require(GGally)
require(XML)
require(mice) # missing data
require(MASS)
require(MKinfer)
require(data.table) # Table creation
require(MVN)
#-----------------------------------------------------------------------------##
##--Load data etc-------------------------------------------------------------##
# Import CSV
df <- read_csv("~/Temp/Bram Competentie Evaluatie GGD ZHZ.csv",
col_names = FALSE, skip = 1)
#-----------------------------------------------------------------------------##
##--Exploratory Data Analysis ------------------------------------------------##
describe(df)
summary(df)
colnames(df)
##--Data Cleaning ------------------------------------------------------------##
# Remove redundant info
df$X1 <- NULL
# Create holder for internal consistency calculation
Internal_Consistency_Table <- data.table()
# Omgaan met werkdruk
# Recode inverted items
df$X2 <- recode(df$X2, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X3 <- recode(df$X3, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X4 <- recode(df$X4, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X5 <- recode(df$X5, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
"The X2 construct was dropped because it caused the reliability to drop to unacceptable levels"
#IN <- data.frame(as.numeric(df$X2), as.numeric(df$X3), as.numeric(df$X4), as.numeric(df$X5))
wrk <- data.frame(as.numeric(df$X3), as.numeric(df$X4), as.numeric(df$X5))
psych::alpha(wrk, na.rm = TRUE, check.keys = TRUE)
wrk_Internal_Consistency <- psych::alpha(wrk, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$wrk <- wrk_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$wrk <- (df$X2 + df$X3 + df$X4 + df$X5)/4
summary(df$wrk)
rm(wrk, wrk_Internal_Consistency)
# Leren en Begrijpen
# Recode inverted items
df$X6 <- recode(df$X6, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X7 <- recode(df$X7, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# X8 is also reversed
df$X8 <- recode(df$X8, 'Zeer mee eens' = 1, 'Mee eens' = 2, 'Neutraal' = 3, 'Mee oneens' = 4, 'Zeer mee oneens' = 5)
df$X9 <- recode(df$X9, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
lrb <- data.frame(as.numeric(df$X6), as.numeric(df$X7), as.numeric(df$X8), as.numeric(df$X9))
psych::alpha(lrb, na.rm = TRUE, check.keys = TRUE)
lrb_Internal_Consistency <- psych::alpha(lrb, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$lrb <- lrb_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$lrb <- (df$X6 + df$X7 + df$X8 + df$X9)/4
summary(df$lrb)
rm(lrb, lrb_Internal_Consistency)
# Leiding/Uitlegvaardigheden
# Recode inverted items
df$X10 <- recode(df$X10, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X11 <- recode(df$X11, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X12 <- recode(df$X12, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X13 <- recode(df$X13, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X14 <- recode(df$X14, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
luv <- data.frame(as.numeric(df$X10), as.numeric(df$X11), as.numeric(df$X12), as.numeric(df$X13), as.numeric(df$X14))
psych::alpha(luv, na.rm = TRUE, check.keys = TRUE)
luv_Internal_Consistency <- psych::alpha(luv, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$luv <- luv_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$luv <- (df$X10 + df$X11 + df$X12 + df$X13 + df$X14)/5
summary(df$luv)
rm(luv, luv_Internal_Consistency)
# Openheid voor IdeeÃ«n
# Recode inverted items
df$X15 <- recode(df$X15, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X16 <- recode(df$X16, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X17 <- recode(df$X17, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X18 <- recode(df$X18, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
idee <- data.frame(as.numeric(df$X15), as.numeric(df$X16), as.numeric(df$X17), as.numeric(df$X18))
psych::alpha(idee, na.rm = TRUE, check.keys = TRUE)
idee_Internal_Consistency <- psych::alpha(idee, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$idee <- idee_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$idee <- (df$X15 + df$X16 + df$X17 + df$X18)/4
summary(df$idee)
rm(idee, idee_Internal_Consistency)
# Creativiteit & oplossingsvaardigheid
# Recode inverted items
df$X19 <- recode(df$X19, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X20 <- recode(df$X20, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X21 <- recode(df$X21, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X22 <- recode(df$X22, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
crea <- data.frame(as.numeric(df$X19), as.numeric(df$X20), as.numeric(df$X21), as.numeric(df$X22))
psych::alpha(crea, na.rm = TRUE, check.keys = TRUE)
crea_Internal_Consistency <- psych::alpha(crea, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$crea <- crea_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$crea <- (df$X19 + df$X20 + df$X21 + df$X22)/4
summary(df$crea)
rm(crea, crea_Internal_Consistency)
# SocialS Skills - Sociale vaardigheden
# Recode inverted items
df$X23 <- recode(df$X23, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X24 <- recode(df$X24, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X25 <- recode(df$X25, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X26 <- recode(df$X26, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
soci <- data.frame(as.numeric(df$X23), as.numeric(df$X24), as.numeric(df$X25), as.numeric(df$X26))
psych::alpha(soci, na.rm = TRUE, check.keys = TRUE)
soci_Internal_Consistency <- psych::alpha(soci, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$soci <- soci_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$soci <- (df$X23 + df$X24 + df$X25 + df$X26)/4
summary(df$soci)
rm(soci, soci_Internal_Consistency)
# Energie
# Recode inverted items
df$X27 <- recode(df$X27, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X28 <- recode(df$X28, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X29 <- recode(df$X29, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X30 <- recode(df$X30, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
# Calculate internal consistency
enr <- data.frame(as.numeric(df$X27), as.numeric(df$X28), as.numeric(df$X29), as.numeric(df$X30))
psych::alpha(enr, na.rm = TRUE, check.keys = TRUE)
enr_Internal_Consistency <- psych::alpha(enr, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$enr <- enr_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$enr <- (df$X27 + df$X28 + df$X29 + df$X30)/4
summary(df$enr)
rm(enr, enr_Internal_Consistency)
# Stress
# Recode inverted items
df$X31 <- recode(df$X31, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X32 <- recode(df$X32, 'Zeer mee eens' = 1, 'Mee eens' = 2, 'Neutraal' = 3, 'Mee oneens' = 4, 'Zeer mee oneens' = 5)
df$X33 <- recode(df$X33, 'Zeer mee eens' = 5, 'Mee eens' = 4, 'Neutraal' = 3, 'Mee oneens' = 2, 'Zeer mee oneens' = 1)
df$X34 <- recode(df$X34, 'Zeer mee eens' = 1, 'Mee eens' = 2, 'Neutraal' = 3, 'Mee oneens' = 4, 'Zeer mee oneens' = 5)
# Calculate internal consistency
#strs <- data.frame(as.numeric(df$X31), as.numeric(df$X32), as.numeric(df$X33), as.numeric(df$X34))
"X32 was dropped as this item brought the relieability to unacceptable levels"
strs <- data.frame(as.numeric(df$X31), as.numeric(df$X33), as.numeric(df$X34))
psych::alpha(strs, na.rm = TRUE, check.keys = TRUE)
strs_Internal_Consistency <- psych::alpha(strs, na.rm = TRUE, check.keys = TRUE)
Internal_Consistency_Table$strs <- strs_Internal_Consistency$total[[1]]
# Calculate aggregate score Per Person
df$strs <- (df$X31 + df$X32 + df$X33 + df$X34)/4
summary(df$strs)
rm(strs, strs_Internal_Consistency)
df[1:34] <- NULL
hist(df)
test <- lm(lrb ~ wrk + lrb + luv + idee + crea + soci + enr + strs, data = df)
summary(test)
densityplot(df$lrb, df)
sociskl <- lm(soci ~ luv + strs, data = df)
summary(sociskl)
oploscrea <- lm(crea ~ lrb + luv + idee, data = df)
oploscrea <- lm(crea ~ lrb + luv + idee, data = df)
summary(oploscrea)
leiduitl <- lm(luv ~ wrk + idee + crea + soci, data = df)
summary(leiduitl)
leerbegrijp <- lm(lrb ~ idee + crea + enr, data = df)
summary(leerbegrijp)
werkdruk <- lm(wrk ~ luv + idee + strs, data = df)
summary(werkdruk)
stress <- lm(strs ~ wrk + soci, data = df)
summary(stress)
ggplot(df, aes(df$crea)) + geom_histogram()
View(df)
x = cfa(model = strs =~ wrk + soci + lrb + luv, data = df)
summary(x)
library(swirlify)
new_lesson("Workshop 1: The World in Data", "Data Science 1")
library(swirlify)
# Create a lesson and repo
setwd(C:/Users/bramh/Documents/GitHub/AAI-DM/docs/Year1/BlockA/DataScience/Courses/DS1)
# Create a lesson and repo
setwd(C:/Users/bramh/Documents/GitHub/AAI-DM/docs/Year1/BlockA/DataScience/Courses/DS1)
getwd
getwd()
# Create a lesson and repo
setwd("C:/Users/bramh/Documents/GitHub/AAI-DM/docs/Year1/BlockA/DataScience/Courses/DS1")
new_lesson("Workshop 1: The World in Data", "Data Science 1")
new_lesson("Workshop 1 - The World in Data", "Data Science 1")
# Create a lesson and repo
setwd("C:/Users/bramh/Documents/GitHub/AAI-DM/docs/Year1/BlockA/DataScience/Courses/DS1")
new_lesson("Workshop_1_The_World_in_Data", "DS1")
# Create a lesson and repo
setwd("C:/Users/bramh/Documents/GitHub/AAI-DM/docs/Year1/BlockA/DataScience/Courses")
new_lesson("Workshop_1_The_World_in_Data", "DS1")
swirl()
library(swirl)
swirl
swirl()
getwd()
paste0(getwd(),"/DS1")
0
10^2 + 36
exit
demo_lesson()
getwd()
setwd("C:/Users/bramh/Documents/GitHub/AAI-DM/docs/Year1/BlockA/DataScience/Courses/DS1")
swirl()
